{"version":3,"sources":["dashboard-ui.min.js"],"names":["d3","scaleString","scaleFactorX","scaleFactorY","scaleStr","undefined","translateString","translateFactorX","translateFactorY","translateStr","rotateString","rotateAngle","transformOriginX","transformOriginY","rotateStr","addAttr","d3element","attrName","attrValue","prepend","attr","appendAttr","this","prependAttr","prependScale","TRANSFORM_ATTR","appendScale","scale","prependTranslate","appendTranslate","translate","prependRotate","appendRotate","rotate","style","opacity","opacityLevel","that","opacityStr","parseFloat","transformOrigin","originX","originY","selectionProto","selection","prototype","transitionProto","transition","window","angular","module","TemplatesFactory","segmentDisplayTemplate","factory","filter","regularExpressions","input","position","regexpOut","output","regexp","getAlphanumericLcdRegexp","length","exec","getFourteenSegmendDisplayRegexp","getSevenSegmentDisplayRegexp","alphanumericLcdRegexp","fourteenSegmentDisplayRegexp","sevenSegmentDisplayRegexp","service","AlphanumericLcdDirective","$filter","link","scope","element","attrs","trimLine","data","filteredString","substring","parameters","columns","fillLine","arr","join","updateLines","lines","select","selectAll","FOREGROUND_CLASS","text","lineIterator","yPosition","RECTANGLE_CHAR","BACKGROUND_CLASS","lcdGroup","fontHeight","rows","parseInt","x","y","showBackground","$watch","append","classed","restrict","$inject","directive","AnalogGaugeDirective","updateGaugeAngle","angleDifference","value","minValue","indicator","startAngle","maxValue","endAngle","Math","abs","deltaAngle","deltaValue","gaugeGroup","indicatorBoundingBox","node","getBoundingClientRect","svgBBox","indicatorOriginX","left","right","indicatorOriginY","bottom","top","BarMeterDirective","updateValue","barLength","stepWidth","currentX","currentY","height","width","originalBarY","originalBarX","maxPosition","minPosition","vertical","bar","duration","EASING_DURATION","ease","EASING","meter","barWidth","DotMeterDirective","dotsCollection","forEach","domElement","FourteenSegmentDisplayDirective","templates","iterator","filteredValue","digits","background","ready","template","LedLightDirective","$interval","turnOn","cancel","blinkingTimer","icon","turnOnLevel","turnOff","turnOffLevel","blinkingMode","blinkingInterval","updateLightMode","mode","toLowerCase","blinkingDelay","$observe","SevenSegmentDisplayDirective"],"mappings":"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","file":"dashboard-ui.min.js","sourcesContent":["/*global window*/\r\n(function (d3) {\r\n    'use strict';\r\n    /*jshint validthis:true */\r\n    var TRANSFORM_ATTR = 'transform',\r\n        selectionProto = d3.selection.prototype,\r\n        transitionProto = d3.transition.prototype;\r\n\r\n    function scaleString(scaleFactorX, scaleFactorY) {\r\n        var scaleStr = 'scale(';\r\n        if (scaleFactorX !== undefined) {\r\n            if (scaleFactorY !== undefined && scaleFactorY !== 1.0) {\r\n                scaleStr += scaleFactorX + ',' + scaleFactorY;\r\n            } else {\r\n                if (scaleFactorX === 1.0) {\r\n                    return '';\r\n                }\r\n                scaleStr += scaleFactorX;\r\n            }\r\n        }\r\n        return scaleStr + ')';\r\n    }\r\n\r\n    function translateString(translateFactorX, translateFactorY) {\r\n        var translateStr = 'translate(';\r\n        if (translateFactorX !== undefined) {\r\n            if (translateFactorY !== undefined && translateFactorY !== 0.0) {\r\n                translateStr += translateFactorX + ',' + translateFactorY;\r\n            } else {\r\n                if (translateFactorX === 0.0) {\r\n                    return '';\r\n                }\r\n                translateStr += translateFactorX;\r\n            }\r\n        }\r\n        return translateStr + ')';\r\n    }\r\n\r\n    function rotateString(rotateAngle, transformOriginX, transformOriginY) {\r\n        var rotateStr = 'rotate(';\r\n        if (rotateAngle !== undefined) {\r\n            rotateStr += rotateAngle + 'deg';\r\n            if ((transformOriginX !== undefined && transformOriginY !== undefined) && (transformOriginX !== 0.0 || transformOriginY !== 0.0)) {\r\n                rotateStr += ',' + transformOriginX + ',' + transformOriginY;\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n        return rotateStr + ')';\r\n    }\r\n\r\n    function addAttr(d3element, attrName, attrValue, prepend) {\r\n        if (attrName !== undefined && attrValue !== undefined) {\r\n            if (attrValue === '') {\r\n                return;\r\n            }\r\n            if (d3element.attr(attrName) === null) {\r\n                d3element.attr(attrName, attrValue);\r\n            } else {\r\n                if (prepend === undefined || !prepend) {\r\n                    d3element.attr(attrName, d3element.attr(attrName) + ' ' + attrValue);\r\n                } else {\r\n                    d3element.attr(attrName, attrValue + ' ' + d3element.attr(attrName));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function appendAttr(attrName, attrValue) {\r\n        addAttr(this, attrName, attrValue);\r\n        return this;\r\n    }\r\n\r\n    function prependAttr(attrName, attrValue) {\r\n        addAttr(this, attrName, attrValue, true);\r\n        return this;\r\n    }\r\n\r\n    function prependScale(scaleFactorX, scaleFactorY) {\r\n        return this.prependAttr(TRANSFORM_ATTR, scaleString(scaleFactorX, scaleFactorY));\r\n    }\r\n\r\n    function appendScale(scaleFactorX, scaleFactorY) {\r\n        return this.appendAttr(TRANSFORM_ATTR, scaleString(scaleFactorX, scaleFactorY));\r\n    }\r\n\r\n    function scale(scaleFactorX, scaleFactorY) {\r\n        return this.attr(TRANSFORM_ATTR, scaleString(scaleFactorX, scaleFactorY));\r\n    }\r\n\r\n    function prependTranslate(translateFactorX, translateFactorY) {\r\n        return this.prependAttr(TRANSFORM_ATTR, translateString(translateFactorX, translateFactorY));\r\n    }\r\n\r\n    function appendTranslate(translateFactorX, translateFactorY) {\r\n        return this.appendAttr(TRANSFORM_ATTR, translateString(translateFactorX, translateFactorY));\r\n    }\r\n\r\n    function translate(translateFactorX, translateFactorY) {\r\n        return this.attr(TRANSFORM_ATTR, translateString(translateFactorX, translateFactorY));\r\n    }\r\n\r\n    function prependRotate(rotateAngle, transformOriginX, transformOriginY) {\r\n        return this.prependAttr(TRANSFORM_ATTR, rotateString(rotateAngle, transformOriginX, transformOriginY));\r\n    }\r\n\r\n    function appendRotate(rotateAngle, transformOriginX, transformOriginY) {\r\n        return this.appendAttr(TRANSFORM_ATTR, rotateString(rotateAngle, transformOriginX, transformOriginY));\r\n    }\r\n\r\n    function rotate(rotateAngle, transformOriginX, transformOriginY) {\r\n        return this.style(TRANSFORM_ATTR, rotateString(rotateAngle, transformOriginX, transformOriginY));\r\n    }\r\n\r\n    function opacity(opacityLevel) {\r\n        var that = this,\r\n            opacityStr = 'opacity';\r\n        if (opacityLevel === undefined) {\r\n            return parseFloat(that.style(opacityStr));\r\n        } else {\r\n            return that.style(opacityStr, opacityLevel);\r\n        }\r\n    }\r\n\r\n    function transformOrigin(originX, originY) {\r\n        return this.style('transform-origin', originX + 'px ' + originY + 'px');\r\n    }\r\n    selectionProto.appendAttr = appendAttr;\r\n    selectionProto.prependAttr = prependAttr;\r\n    transitionProto.appendAttr = appendAttr;\r\n    transitionProto.prependAttr = prependAttr;\r\n\r\n    //Selection transform\r\n    selectionProto.prependScale = prependScale;\r\n    selectionProto.appendScale = appendScale;\r\n    selectionProto.scale = scale;\r\n    selectionProto.prependTranslate = prependTranslate;\r\n    selectionProto.appendTranslate = appendTranslate;\r\n    selectionProto.translate = translate;\r\n    selectionProto.prependRotate = prependRotate;\r\n    selectionProto.appendRotate = appendRotate;\r\n    selectionProto.rotate = rotate;\r\n    selectionProto.opacity = opacity;\r\n    selectionProto.transformOrigin = transformOrigin;\r\n\r\n    //Animation transform\r\n    transitionProto.prependScale = prependScale;\r\n    transitionProto.appendScale = appendScale;\r\n    transitionProto.scale = scale;\r\n    transitionProto.prependTranslate = prependTranslate;\r\n    transitionProto.appendTranslate = appendTranslate;\r\n    transitionProto.translate = translate;\r\n    transitionProto.prependRotate = prependRotate;\r\n    transitionProto.appendRotate = appendRotate;\r\n    transitionProto.rotate = rotate;\r\n    transitionProto.opacity = opacity;\r\n    transitionProto.transformOrigin = transformOrigin;\r\n\r\n}(window.d3));\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui', ['ngRoute', 'dashboard-ui.directives']);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular\r\n        .module('dashboard-ui.commons', []);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    function TemplatesFactory() {\r\n        return {\r\n            segmentDisplayTemplate: '<text seven-segment-display id=\"background\" text-anchor=\"end\" dominant-baseline=\"text-before-edge\" fill=\"black\" opacity=\"{{opacity}}\">{{background}}</text><text id=\"value\" dominant-baseline=\"text-before-edge\" writing-mode=\"lr\">{{filteredValue}}</text>'\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.commons')\r\n        .factory('templates', TemplatesFactory);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n    \r\n    angular.module('dashboard-ui.filters', []);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui.directives', ['dashboard-ui.commons', 'dashboard-ui.filters']);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n    angular.module('dashboard-ui.filters').filter('alphanumericLcdFilter', ['regularExpressions', function (regularExpressions) {\r\n        return function (input) {\r\n            var position,\r\n                output = '',\r\n                regexpOut,\r\n                regexp = regularExpressions.getAlphanumericLcdRegexp();\r\n            if (input !== undefined) {\r\n                for (position = 0; position < input.length; position += 1) {\r\n                    regexpOut = regexp.exec(input[position]);\r\n                    if (regexpOut !== null) {\r\n                        output += regexpOut[0];\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n    angular.module('dashboard-ui.filters').filter('fourteenSegmentDisplayFilter', ['regularExpressions', function (regularExpressions) {\r\n        return function (input) {\r\n            var position,\r\n                output = '',\r\n                regexpOut,\r\n                regexp = regularExpressions.getFourteenSegmendDisplayRegexp();\r\n            if (input !== undefined) {\r\n                for (position = 0; position < input.length; position += 1) {\r\n                    regexpOut = regexp.exec(input[position]);\r\n                    if (regexpOut !== null) {\r\n                        output += regexpOut[0];\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n    angular.module('dashboard-ui.filters').filter('sevenSegmentDisplayFilter', ['regularExpressions', function (regularExpressions) {\r\n        return function (input) {\r\n            var position,\r\n                output = '',\r\n                regexpOut,\r\n                regexp = regularExpressions.getSevenSegmentDisplayRegexp();\r\n            if (input !== undefined) {\r\n                for (position = 0; position < input.length; position += 1) {\r\n                    regexpOut = regexp.exec(input[position]);\r\n                    if (regexpOut !== null) {\r\n                        output += regexpOut[0];\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n    }]);\r\n}());\r\n\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    function regularExpressions() {\r\n\r\n        var alphanumericLcdRegexp = /[\\u000d\\u0020-\\u007e\\u00a0-\\u00ff\\u0152\\u0153\\u0160\\u0161\\u0178\\u017d\\u017e\\u0192\\u0b82\\u0b83\\u0b85\\u0b86\\u0b87\\u0b88\\u0b89\\u0b8a\\u0b8e\\u0b8f\\u0b90\\u0b92\\u2014\\u2018\\u2019\\u201a\\u201b\\u201c\\u201d\\u201e\\u2020\\u2022\\u2026\\u2039\\u203a\\u20ac\\u2122\\ufb01\\ufb02]{0,}/,\r\n            fourteenSegmentDisplayRegexp = /[\\u0022\\u0024-\\u003a\\u003c-\\u005a\\u005c\\u005e-\\u007a\\u007c\\u007e\\u00a5\\u00a6\\u00b1]/,\r\n            sevenSegmentDisplayRegexp = /[\\u002d\\u002e\\u0030-\\u003a\\u0041-\\u005a\\u0061-\\u007a]/;\r\n\r\n        function getAlphanumericLcdRegexp() {\r\n            return alphanumericLcdRegexp;\r\n        }\r\n\r\n        function getFourteenSegmendDisplayRegexp() {\r\n            return fourteenSegmentDisplayRegexp;\r\n        }\r\n\r\n        function getSevenSegmentDisplayRegexp() {\r\n            return sevenSegmentDisplayRegexp;\r\n        }\r\n\r\n        return {\r\n            getAlphanumericLcdRegexp: getAlphanumericLcdRegexp,\r\n            getFourteenSegmendDisplayRegexp: getFourteenSegmendDisplayRegexp,\r\n            getSevenSegmentDisplayRegexp: getSevenSegmentDisplayRegexp\r\n        };\r\n    }\r\n\r\n    angular.module('dashboard-ui.filters').service('regularExpressions', regularExpressions);\r\n}());\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function AlphanumericLcdDirective($filter) {\r\n        function link(scope, element, attrs) {\r\n            var RECTANGLE_CHAR = '\\u0B8F',\r\n                FOREGROUND_CLASS = 'foreground',\r\n                BACKGROUND_CLASS = 'background',\r\n                lcdGroup = d3.select(element[0]),\r\n                lineIterator,\r\n                fontHeight = 18,\r\n                yPosition;\r\n            scope.parameters = {\r\n                rows: parseInt(scope.rows, 10) || 2,\r\n                columns: parseInt(scope.columns, 10) || 16,\r\n                scale: parseFloat(scope.scale) || 1.0,\r\n                x: parseFloat(scope.x) || 0,\r\n                y: parseFloat(scope.y) || 0,\r\n                showBackground: scope.showBackground === 'true'\r\n            };\r\n\r\n            function trimLine(data) {\r\n                var filteredString = $filter('alphanumericLcdFilter')(data);\r\n                return filteredString.substring(0, scope.parameters.columns);\r\n            }\r\n\r\n            function fillLine(data) {\r\n                var arr = [];\r\n                arr.length = scope.parameters.columns + 1;\r\n                return arr.join(data);\r\n            }\r\n\r\n            function updateLines() {\r\n                var lineNumber,\r\n                    lines = scope.lines;\r\n                d3.select(element[0])\r\n                    .selectAll('.' + FOREGROUND_CLASS)\r\n                    .data(lines)\r\n                    .text(trimLine);\r\n            }\r\n            scope.$watch('lines', updateLines);\r\n            lcdGroup.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            for (lineIterator = 0; lineIterator < scope.parameters.rows; lineIterator += 1) {\r\n                yPosition = fontHeight * (lineIterator + 1);\r\n                lcdGroup.append('text')\r\n                    .classed(FOREGROUND_CLASS, true)\r\n                    .attr('y', yPosition)\r\n                    .prependScale(scope.parameters.scale);\r\n                if (scope.parameters.showBackground) {\r\n                    lcdGroup.append('text')\r\n                        .classed(BACKGROUND_CLASS, true)\r\n                        .attr('y', yPosition)\r\n                        .prependScale(scope.parameters.scale)\r\n                        .data(RECTANGLE_CHAR)\r\n                        .text(fillLine);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                rows: '@',\r\n                columns: '@',\r\n                scale: '@',\r\n                showBackground: '@',\r\n                lines: '=',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    AlphanumericLcdDirective.$inject = ['$filter'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('alphanumericLcd', AlphanumericLcdDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function AnalogGaugeDirective() {\r\n        function link(scope, element, attrs) {\r\n            var gaugeGroup = d3.select(element[0]),\r\n                indicator = gaugeGroup.select('#indicator'),\r\n                indicatorBoundingBox = indicator.node()\r\n                    .getBoundingClientRect(),\r\n                svgBBox = d3.select('svg')\r\n                    .node()\r\n                    .getBoundingClientRect(),\r\n                deltaAngle,\r\n                deltaValue;\r\n            scope.parameters = {\r\n                x: parseFloat(scope.x) || 0.0,\r\n                y: parseFloat(scope.y) || 0.0,\r\n                indicatorOriginX: parseFloat(scope.indicatorOriginX) || ((indicatorBoundingBox.left + indicatorBoundingBox.right) / 2) - svgBBox.left,\r\n                indicatorOriginY: parseFloat(scope.indicatorOriginY) || (indicatorBoundingBox.bottom - svgBBox.top),\r\n                startAngle: parseFloat(scope.startAngle) || 0.0,\r\n                endAngle: parseFloat(scope.endAngle) || ((parseFloat(scope.startAngle) || 0.0) * -1),\r\n                minValue: parseFloat(scope.minValue) || 0,\r\n                maxValue: parseFloat(scope.maxValue) || 100.0\r\n            };\r\n            deltaAngle = scope.parameters.endAngle - scope.parameters.startAngle;\r\n            deltaValue = scope.parameters.maxValue - scope.parameters.minValue;\r\n\r\n            function updateGaugeAngle() {\r\n                var value = parseFloat(scope.value),\r\n                    angleDifference;\r\n                if (value < scope.parameters.minValue) {\r\n                    indicator.rotate(scope.parameters.startAngle);\r\n                } else if (value > scope.parameters.maxValue) {\r\n                    indicator.rotate(scope.parameters.endAngle);\r\n                } else {\r\n                    angleDifference = Math.abs((deltaAngle / deltaValue) * (scope.parameters.minValue - value));\r\n                    if (scope.parameters.startAngle < scope.parameters.endAngle) {\r\n                        indicator.rotate(scope.parameters.startAngle + angleDifference);\r\n                    } else {\r\n                        indicator.rotate(scope.parameters.startAngle - angleDifference);\r\n                    }\r\n                }\r\n            }\r\n            gaugeGroup.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            indicator.transformOrigin(scope.parameters.indicatorOriginX, scope.parameters.indicatorOriginY)\r\n                .style('transition', 'all 0.25s linear');\r\n            scope.$watch('value', updateGaugeAngle);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                value: '=',\r\n                startAngle: '@',\r\n                endAngle: '@',\r\n                maxValue: '@',\r\n                minValue: '@',\r\n                indicatorOriginX: '@',\r\n                indicatorOriginY: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('analogGauge', AnalogGaugeDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function BarMeterDirective() {\r\n        function link(scope, element, attrs) {\r\n            var EASING_DURATION = 250,\r\n                EASING = 'linear',\r\n                meter = d3.select(element[0]),\r\n                bar = meter.select('#bar'),\r\n                barWidth = parseInt(bar.attr('width'), 10) || 0,\r\n                stepWidth;\r\n            scope.parameters = {\r\n                x: parseFloat(scope.x) || 0.0,\r\n                y: parseFloat(scope.y) || 0.0,\r\n                vertical: scope.vertical === 'true',\r\n                minValue: parseFloat(scope.minValue) || 0.0,\r\n                maxValue: parseFloat(scope.maxValue) || 0.0,\r\n                minPosition: parseFloat(scope.minPosition) || 0.0,\r\n                maxPosition: parseFloat(scope.maxPosition) || barWidth,\r\n                originalBarX: parseFloat(bar.attr('x')) || 0,\r\n                originalBarY: parseFloat(bar.attr('y')) || 0\r\n            };\r\n            stepWidth = ((scope.parameters.maxPosition - scope.parameters.minPosition) / (scope.parameters.maxValue - scope.parameters.minValue));\r\n\r\n            function updateValue() {\r\n                var value = parseFloat(scope.value) || 0.0,\r\n                    barLength = Math.abs(stepWidth * value),\r\n                    currentX = 0,\r\n                    currentY = 0,\r\n                    height = 0,\r\n                    width = 0;\r\n                if (value >= 0 && value <= scope.parameters.maxValue) {\r\n                    currentY = scope.parameters.originalBarY - barLength;\r\n                    height = barLength;\r\n                    currentX = scope.parameters.originalBarX;\r\n                    width = barLength;\r\n                } else if (value < 0 && value >= scope.parameters.minValue) {\r\n                    currentY = scope.parameters.originalBarY;\r\n                    height = barLength;\r\n                    currentX = scope.parameters.originalBarX - barLength;\r\n                    width = barLength;\r\n                } else if (value > scope.parameters.maxValue) {\r\n                    currentY = scope.parameters.maxPosition;\r\n                    height = stepWidth * scope.parameters.maxValue;\r\n                    currentX = scope.parameters.originalBarX;\r\n                    width = stepWidth * scope.parameters.maxValue;\r\n                } else if (value < scope.parameters.minValue) {\r\n                    currentY = scope.parameters.originalBarY;\r\n                    height = stepWidth * scope.parameters.minValue;\r\n                    currentX = scope.parameters.minPosition;\r\n                    width = stepWidth * scope.parameters.minValue;\r\n                }\r\n                if (scope.parameters.vertical) {\r\n                    bar.transition()\r\n                        .duration(EASING_DURATION)\r\n                        .ease(EASING)\r\n                        .attr('y', currentY)\r\n                        .attr('height', Math.abs(height));\r\n                } else {\r\n                    bar.transition()\r\n                        .duration(EASING_DURATION)\r\n                        .ease(EASING)\r\n                        .attr('x', currentX)\r\n                        .attr('width', Math.abs(width));\r\n                }\r\n            }\r\n            meter.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            scope.$watch('value', updateValue);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                minValue: '@',\r\n                maxValue: '@',\r\n                minPosition: '@',\r\n                maxPosition: '@',\r\n                value: '=',\r\n                vertical: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('barMeter', BarMeterDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function DotMeterDirective() {\r\n        function link(scope, element, attrs) {\r\n            var dotsCollection = d3.select(element[0]);\r\n            scope.parameters = {\r\n                maxValue: parseInt(scope.maxValue, 10) || 0,\r\n                minValue: parseInt(scope.minValue, 10) || 0,\r\n                x: parseFloat(scope.x) || 0,\r\n                y: parseFloat(scope.y) || 0\r\n            };\r\n\r\n            function updateValue() {\r\n                var value = parseInt(scope.value, 10) || 0;\r\n                if (value > scope.parameters.maxValue) {\r\n                    value = scope.parameters.maxValue;\r\n                } else if (value < scope.parameters.minValue) {\r\n                    value = scope.parameters.minValue;\r\n                }\r\n                dotsCollection.selectAll('[id^=dot]')[0].forEach(function (domElement) {\r\n                    var opacity = 1.0,\r\n                        selection = d3.select(domElement);\r\n                    if (parseInt(selection.attr('data-value'), 10) > value) {\r\n                        opacity = 0.0;\r\n                    }\r\n                    selection.opacity(opacity);\r\n                });\r\n            }\r\n            dotsCollection.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            scope.$watch('value', updateValue);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                minValue: '@',\r\n                maxValue: '@',\r\n                value: '=',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('dotMeter', DotMeterDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function FourteenSegmentDisplayDirective(templates, $filter) {\r\n        function link(scope, element, attrs) {\r\n            var d3element = d3.select(element[0]),\r\n                iterator;\r\n            scope.filteredValue = '';\r\n            scope.parameters = {\r\n                x: parseFloat(scope.x) || 0.0,\r\n                y: parseFloat(scope.y) || 0.0,\r\n                showBackground: scope.showBackground === 'true',\r\n                digits: parseInt(scope.digits, 10) || 3\r\n            };\r\n            scope.$watch('value', function () {\r\n                scope.filteredValue = $filter('fourteenSegmentDisplayFilter')(scope.value);\r\n            });\r\n            d3element.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            scope.background = '~';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < scope.parameters.digits - 1; iterator += 1) {\r\n                scope.background += '.~';\r\n            }\r\n            if (scope.parameters.showBackground) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function () {\r\n                var width = d3element.select('text#background')\r\n                    .node()\r\n                    .getBoundingClientRect()\r\n                    .width;\r\n                d3element.select('text#value')\r\n                    .translate(width, 0);\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '=',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    FourteenSegmentDisplayDirective.$inject = ['templates', '$filter'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('fourteenSegmentDisplay', FourteenSegmentDisplayDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function LedLightDirective($interval) {\r\n        function link(scope, element, attrs) {\r\n            var icon = d3.select(element[0]),\r\n                blinkingTimer;\r\n            scope.parameters = {\r\n                y: parseFloat(scope.y) || 0.0,\r\n                x: parseFloat(scope.x) || 0.0,\r\n                blinkingInterval: parseInt(scope.blinkingInterval, 10) || 500,\r\n                blinkingDelay: parseInt(scope.blinkingDelay, 10) || 0,\r\n                turnOnLevel: parseFloat(scope.turnOnLevel) || 1.0,\r\n                turnOffLevel: parseFloat(scope.turnOffLevel) || 0.0\r\n            };\r\n\r\n            function turnOn() {\r\n                $interval.cancel(blinkingTimer);\r\n                icon.opacity(scope.parameters.turnOnLevel);\r\n            }\r\n\r\n            function turnOff() {\r\n                $interval.cancel(blinkingTimer);\r\n                icon.opacity(scope.parameters.turnOffLevel);\r\n            }\r\n\r\n            function blinkingMode() {\r\n                blinkingTimer = $interval(function () {\r\n                    if (icon.opacity() === scope.parameters.turnOnLevel) {\r\n                        icon.opacity(scope.parameters.turnOffLevel);\r\n                    } else {\r\n                        icon.opacity(scope.parameters.turnOnLevel);\r\n                    }\r\n                }, scope.parameters.blinkingInterval);\r\n            }\r\n\r\n            function updateLightMode() {\r\n                if (scope.mode.toLowerCase() === 'on') {\r\n                    turnOn();\r\n                } else if (scope.mode.toLowerCase() === 'blinking') {\r\n                    blinkingMode();\r\n                } else {\r\n                    turnOff();\r\n                }\r\n            }\r\n            icon.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            if (scope.parameters.blinkingDelay > 0) {\r\n                icon.style('transition', 'all ' + (scope.parameters.blinkingDelay / 1000) + 's linear 0s');\r\n            }\r\n            attrs.$observe('mode', updateLightMode);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                mode: '@',\r\n                turnOffLevel: '@',\r\n                turnOnLevel: '@',\r\n                blinkingInterval: '@',\r\n                blinkingDelay: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    LedLightDirective.$inject = ['$interval'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('ledLight', LedLightDirective);\r\n}(window.d3));\r\n\n/*global window, angular*/\r\n(function (d3) {\r\n    'use strict';\r\n\r\n    function SevenSegmentDisplayDirective(templates, $filter) {\r\n        function link(scope, element, attrs) {\r\n            var d3element = d3.select(element[0]),\r\n                iterator;\r\n            scope.filteredValue = '';\r\n            scope.parameters = {\r\n                x: parseFloat(scope.x) || 0.0,\r\n                y: parseFloat(scope.y) || 0.0,\r\n                showBackground: scope.showBackground === 'true',\r\n                digits: parseInt(scope.digits, 10) || 3\r\n            };\r\n            scope.$watch('value', function () {\r\n                scope.filteredValue = $filter('sevenSegmentDisplayFilter')(scope.value);\r\n            });\r\n            d3element.prependTranslate(scope.parameters.x, scope.parameters.y);\r\n            scope.background = '8';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < scope.parameters.digits - 1; iterator += 1) {\r\n                scope.background += '.8';\r\n            }\r\n            if (scope.parameters.showBackground) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function () {\r\n                var width = d3element.select('text#background')\r\n                    .node()\r\n                    .getBoundingClientRect()\r\n                    .width;\r\n                d3element.select('text#value')\r\n                    .translate(width, 0);\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '=',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    SevenSegmentDisplayDirective.$inject = ['templates', '$filter'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('sevenSegmentDisplay', SevenSegmentDisplayDirective);\r\n}(window.d3));\r\n"],"sourceRoot":"/source/"}