{"version":3,"sources":["dashboard-ui.min.js"],"names":["d3","selectionProto","selection","prototype","appendAttr","attrName","attrValue","that","this","undefined","attr","prependAttr","window","angular","module","SvgUtilsFactory","transformAttr","transformOriginAttr","opacityStyle","translateString","x","y","scaleString","scale","rotateString","angle","transformOriginString","indicatorOriginX","indicatorOriginY","factory","TemplatesFactory","segmentDisplayTemplate","AlphanumericLcdDirective","svgUtils","link","scope","element","attrs","updateLines","lineNumber","lines","rows","select","selectAll","FOREGROUND_CLASS","data","text","substring","columns","lineIterator","yPosition","RECTANGLE_CHAR","BACKGROUND_CLASS","parseInt","parseFloat","showBackground","lcdGroup","fontHeight","append","classed","arr","length","join","$watch","restrict","$inject","directive","AnalogGaugeDirective","updateGaugeAngle","value","minValue","startAngle","maxValue","endAngle","angleDifference","Math","abs","deltaAngle","deltaValue","indicator","style","gaugeGroup","indicatorBoundingBox","node","getBBox","width","height","BarMeterDirective","updateValue","currentX","currentY","barLength","stepWidth","originalBarY","originalBarX","maxPosition","minPosition","vertical","bar","transition","duration","EASING_DURATION","ease","EASING","meter","barWidth","DotMeterDirective","changeValue","dotsCollection","forEach","domElement","opacity","FourteenSegmentDisplayDirective","templates","iterator","digits","background","d3element","ready","template","LedLightDirective","$interval","setOpacity","icon","isVisible","turnOnLevel","turnOn","cancel","blinkingTimer","turnOff","turnOffLevel","blinkingMode","blinkingInterval","isNaN","mode","toLowerCase","SevenSegmentDisplayDirective"],"mappings":"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","file":"dashboard-ui.min.js","sourcesContent":["(function (d3) {\r\n\tvar selectionProto = d3.selection.prototype;\r\n\tselectionProto.appendAttr = function (attrName, attrValue) {\r\n\t\tvar that = this;\r\n\t\tif (attrName !== undefined && attrValue !== undefined) {\r\n\t\t\tif (that.attr(attrName) === null) {\r\n\t\t\t\tthat.attr(attrName, attrValue);\r\n\t\t\t} else {\r\n\t\t\t\tthat.attr(attrName, that.attr(attrName) + ' ' + attrValue);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tselectionProto.prependAttr = function (attrName, attrValue) {\r\n\t\tvar that = this;\r\n\t\tif (attrName !== undefined && attrValue !== undefined) {\r\n\t\t\tif (that.attr(attrName) === null) {\r\n\t\t\t\tthat.attr(attrName, attrValue);\r\n\t\t\t} else {\r\n\t\t\t\tthat.attr(attrName, attrValue + ' ' + that.attr(attrName));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} (window.d3));\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui', ['ngRoute', 'dashboard-ui.directives']);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons', []);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction SvgUtilsFactory() {\r\n\t\treturn {\r\n\t\t\ttransformAttr: 'transform',\r\n\t\t\ttransformOriginAttr: 'transform-origin',\r\n\t\t\topacityStyle: 'opacity',\r\n\t\t\ttranslateString: function (x, y) {\r\n                return 'translate(' + x + ', ' + y + ')';\r\n            },\r\n            scaleString: function (scale) {\r\n                return 'scale(' + scale + ')';\r\n            },\r\n\t\t\trotateString: function (angle) {\r\n\t\t\t\treturn 'rotate(' + angle + 'deg)';\r\n\t\t\t},\r\n\t\t\ttransformOriginString: function (indicatorOriginX, indicatorOriginY) {\r\n\t\t\t\treturn indicatorOriginX + 'px ' + indicatorOriginY + 'px';\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons')\r\n\t\t.factory('svgUtils', SvgUtilsFactory);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction TemplatesFactory() {\r\n\t\treturn {\r\n\t\t\tsegmentDisplayTemplate: '<text id=\"background\" text-anchor=\"end\" dominant-baseline=\"text-before-edge\" fill=\"black\" opacity=\"{{opacity}}\">{{background}}</text><text id=\"value\" dominant-baseline=\"text-before-edge\" writing-mode=\"lr\">{{value}}</text>'\r\n\t\t};\r\n\t}\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons')\r\n\t\t.factory('templates', TemplatesFactory);\r\n} ());\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui.directives', ['dashboard-ui.commons']);\r\n} ());\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AlphanumericLcdDirective(svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var RECTANGLE_CHAR = '\\u0B8F',\r\n                FOREGROUND_CLASS = 'foreground',\r\n                BACKGROUND_CLASS = 'background',\r\n                rows = parseInt(scope.rows, 10) || 2,\r\n                columns = parseInt(scope.columns, 10) || 16,\r\n                scale = parseFloat(scope.scale, 10) || 1.0,\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                showBackground = (scope.showBackground === 'true'),\r\n                lcdGroup = d3.select(element[0]),\r\n                lineIterator,\r\n                fontHeight = 18,\r\n                yPosition;\r\n            function updateLines() {\r\n                var lineNumber,\r\n                    lines = scope.lines;\r\n                for (lineNumber = 0; lineNumber < rows; lineNumber += 1) {\r\n                    if (lines[lineNumber] !== undefined) {\r\n                        d3.select(element[0]).selectAll('.'+FOREGROUND_CLASS).data(lines).text(function (data) {\r\n                            return data.substring(0, columns);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            lcdGroup.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n            for (lineIterator = 0; lineIterator < rows; lineIterator += 1) {\r\n                yPosition = fontHeight * (lineIterator + 1);\r\n                lcdGroup.append('text').classed(FOREGROUND_CLASS, true).attr('y', yPosition).attr(svgUtils.transformAttr, svgUtils.scaleString(scale));\r\n                if (showBackground) {\r\n                    lcdGroup.append('text').classed(BACKGROUND_CLASS, true).attr('y', yPosition).attr(svgUtils.transformAttr, svgUtils.scaleString(scale)).data(RECTANGLE_CHAR).text(function (data) {\r\n                        var arr = [];\r\n                        arr.length = columns + 1;\r\n                        return arr.join(data);\r\n                    });\r\n                }\r\n            }\r\n            scope.$watch('lines', updateLines);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                rows: '@',\r\n                columns: '@',\r\n                scale: '@',\r\n                showBackground: '@',\r\n                lines: '=',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    AlphanumericLcdDirective.$inject = ['svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('alphanumericLcd', AlphanumericLcdDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AnalogGaugeDirective(svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var startAngle = parseInt(scope.startAngle, 10),\r\n                maxValue = parseInt(scope.maxValue, 10),\r\n                endAngle = parseInt(scope.endAngle, 10) || (startAngle * -1),\r\n                minValue = parseInt(scope.minValue, 10) || 0,\r\n                x = parseFloat(scope.x) || 0.0,\r\n                y = parseFloat(scope.y) || 0.0,\r\n                gaugeGroup = d3.select(element[0]),\r\n                indicator = gaugeGroup.select('#indicator'),\r\n                indicatorBoundingBox = indicator.node().getBBox(),\r\n                indicatorOriginX = scope.indicatorOriginX || (indicatorBoundingBox.x + (indicatorBoundingBox.width / 2)),\r\n                indicatorOriginY = scope.indicatorOriginY || (indicatorBoundingBox.y + (indicatorBoundingBox.height / 2)),\r\n                angle,\r\n                deltaAngle = endAngle - startAngle,\r\n                deltaValue = maxValue - minValue;\r\n\r\n            function updateGaugeAngle() {\r\n                var value = parseInt(scope.value, 10);\r\n                if (value < minValue) {\r\n                    angle = startAngle;\r\n                } else if (value > maxValue) {\r\n                    angle = endAngle;\r\n                } else {\r\n                    var angleDifference = Math.abs((deltaAngle / deltaValue) * (minValue - value));\r\n                    if (startAngle < endAngle) {\r\n                        angle = startAngle + angleDifference;\r\n                    } else {\r\n                        angle = startAngle - angleDifference;\r\n                    }\r\n                }\r\n                indicator.style(svgUtils.transformAttr, svgUtils.rotateString(angle));\r\n            }\r\n            gaugeGroup.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n            indicator.style(svgUtils.transformOriginAttr, svgUtils.transformOriginString(indicatorOriginX, indicatorOriginY));\r\n            scope.$watch('value', updateGaugeAngle);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                value: '@',\r\n                startAngle: '@',\r\n                endAngle: '@',\r\n                maxValue: '@',\r\n                minValue: '@',\r\n                indicatorOriginX: '@',\r\n                indicatorOriginY: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    AnalogGaugeDirective.$inject = ['svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('analogGauge', AnalogGaugeDirective);\r\n} (window.d3));\n(function (d3) {\r\n\t'use strict';\r\n\t/*global angular, console*/\r\n\r\n\tfunction BarMeterDirective(svgUtils) {\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t\tvar EASING_DURATION = 250,\r\n\t\t\t\tEASING = 'linear',\r\n\t\t\t\tx = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n\t\t\t\tmaxValue = parseInt(scope.maxValue, 10),\r\n\t\t\t\tminValue = parseInt(scope.minValue, 10) || 0,\r\n\t\t\t\tminPosition = parseInt(scope.minPosition, 10) || 0,\r\n\t\t\t\tmeter = d3.select(element[0]),\r\n\t\t\t\tbar = meter.select('#bar'),\r\n\t\t\t\tbarWidth = parseInt(bar.attr('width')) || 0,\r\n\t\t\t\tmaxPosition = parseInt(scope.maxPosition, 10) || barWidth,\r\n\t\t\t\tvertical = (scope.vertical === 'true'),\r\n\t\t\t\toriginalBarX = parseInt(bar.attr('x'), 10) || 0,\r\n\t\t\t\toriginalBarY = parseInt(bar.attr('y'), 10) || 0,\r\n\t\t\t\tstepWidth = ((maxPosition - minPosition) / (maxValue - minValue));\r\n\t\t\tfunction updateValue() {\r\n\t\t\t\tvar value = parseInt(scope.value, 10) || 0,\r\n\t\t\t\t\tbarLength = Math.abs(stepWidth * value),\r\n\t\t\t\t\tcurrentX,\r\n                    currentY,\r\n                    height,\r\n                    width;\r\n\t\t\t\tif (value >= 0 && value <= maxValue) {\r\n\t\t\t\t\tcurrentY = originalBarY - barLength;\r\n\t\t\t\t\theight = barLength;\r\n\t\t\t\t\tcurrentX = originalBarX;\r\n\t\t\t\t\twidth = barLength;\r\n\t\t\t\t} else if (value < 0 && value >= minValue) {\r\n\t\t\t\t\tcurrentY = originalBarY;\r\n\t\t\t\t\theight = barLength;\r\n\t\t\t\t\tcurrentX = originalBarX - barLength;\r\n\t\t\t\t\twidth = barLength;\r\n\t\t\t\t} else if (value > maxValue) {\r\n\t\t\t\t\tcurrentY = maxPosition;\r\n\t\t\t\t\theight = stepWidth * maxValue;\r\n\t\t\t\t\tcurrentX = originalBarX;\r\n\t\t\t\t\twidth = stepWidth * maxValue;\r\n\t\t\t\t} else if (value < minValue) {\r\n\t\t\t\t\tcurrentY = originalBarY;\r\n\t\t\t\t\theight = stepWidth * minValue;\r\n\t\t\t\t\tcurrentX = minPosition;\r\n\t\t\t\t\twidth = stepWidth * minValue;\r\n\t\t\t\t}\r\n\t\t\t\tif (vertical) {\r\n\t\t\t\t\tbar.transition().duration(EASING_DURATION).ease(EASING).attr('y', currentY).attr('height', Math.abs(height));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbar.transition().duration(EASING_DURATION).ease(EASING).attr('x', currentX).attr('width', Math.abs(width));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmeter.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n\t\t\tscope.$watch('value', updateValue);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tlink: link,\r\n\t\t\trestrict: 'C',\r\n\t\t\tscope: {\r\n\t\t\t\tminValue: '@',\r\n\t\t\t\tmaxValue: '@',\r\n\t\t\t\tminPosition: '@',\r\n\t\t\t\tmaxPosition: '@',\r\n\t\t\t\tvalue: '@',\r\n\t\t\t\tvertical: '@',\r\n\t\t\t\tx: '@',\r\n\t\t\t\ty: '@'\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tBarMeterDirective.$inject = ['svgUtils'];\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.directives')\r\n\t\t.directive('barMeter', BarMeterDirective);\r\n} (window.d3));\n(function (d3) {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction DotMeterDirective(svgUtils) {\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t\tvar minValue = parseInt(scope.minValue, 10) || 0,\r\n\t\t\t\tmaxValue = parseInt(scope.maxValue, 10),\r\n\t\t\t\tx = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n\t\t\t\tdotsCollection = d3.select(element[0]);\r\n\t\t\tfunction changeValue() {\r\n\t\t\t\tvar value = parseInt(scope.value, 10) || 0;\r\n\t\t\t\tif (value > maxValue) {\r\n\t\t\t\t\tvalue = maxValue;\r\n\t\t\t\t} else if (value < minValue) {\r\n\t\t\t\t\tvalue = minValue;\r\n\t\t\t\t}\r\n\t\t\t\tdotsCollection.selectAll('[id^=dot]')[0].forEach(function(domElement) {\r\n\t\t\t\t\tvar opacity = 1.0,\r\n\t\t\t\t\t\tselection = d3.select(domElement);\r\n\t\t\t\t\tif(parseInt(selection.attr('data-value'), 10) > value) {\r\n\t\t\t\t\t\topacity = 0.0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselection.style(svgUtils.opacityStyle, opacity);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tdotsCollection.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n\t\t\tscope.$watch('value', changeValue);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tlink: link,\r\n\t\t\trestrict: 'C',\r\n\t\t\tscope: {\r\n\t\t\t\tminValue: '@',\r\n\t\t\t\tmaxValue: '@',\r\n\t\t\t\tvalue: '@',\r\n\t\t\t\tx: '@',\r\n\t\t\t\ty: '@'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tDotMeterDirective.$inject = ['svgUtils'];\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.directives')\r\n\t\t.directive('dotMeter', DotMeterDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function FourteenSegmentDisplayDirective(svgUtils, templates) {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                background = (scope.showBackground === \"true\"),\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                d3element = d3.select(element[0]),\r\n                iterator;\r\n            d3element.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n            scope.background = '~';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                scope.background += '.~';\r\n            }\r\n            if (background) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function() {\r\n                var width = d3element.select('text#background').node().getBBox().width;\r\n                d3element.select('text#value').attr(svgUtils.transformAttr, svgUtils.translateString(width, 0));\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '@',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    FourteenSegmentDisplayDirective.$inject = ['svgUtils', 'templates'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('fourteenSegmentDisplay', FourteenSegmentDisplayDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    function LedLightDirective($interval, svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                icon = d3.select(element[0]),\r\n                blinkingInterval = parseInt(scope.blinkingInterval),\r\n                turnOnLevel = parseFloat(scope.turnOnLevel) || 1.0,\r\n                turnOffLevel = parseFloat(scope.turnOffLevel) || 0.0,\r\n                blinkingTimer;\r\n            function setOpacity(opacity) {\r\n                icon.style(svgUtils.opacityStyle, opacity);\r\n            }\r\n            function isVisible() {\r\n                return parseFloat(icon.style(svgUtils.opacityStyle)) === turnOnLevel;\r\n            }\r\n            function turnOn() {\r\n                $interval.cancel(blinkingTimer);\r\n                setOpacity(turnOnLevel);\r\n            }\r\n            function turnOff() {\r\n                $interval.cancel(blinkingTimer);\r\n                setOpacity(turnOffLevel);\r\n            }\r\n            function blinkingMode() {\r\n                blinkingTimer = $interval(function () {\r\n                    if (isVisible()) {\r\n                        setOpacity(turnOffLevel);\r\n                    } else {\r\n                        setOpacity(turnOnLevel);\r\n                    }\r\n                }, 500);\r\n            }\r\n            icon.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n            if (!isNaN(blinkingInterval)) {\r\n                icon.style('transition', 'all ' + (blinkingInterval / 1000) + 's linear 0s');\r\n            }\r\n            scope.$watch('mode', function () {\r\n                if (scope.mode.toLowerCase() === 'on') {\r\n                    turnOn();\r\n                } else if (scope.mode.toLowerCase() === 'blinking') {\r\n                    blinkingMode();\r\n                } else {\r\n                    turnOff();\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                mode: '@',\r\n                turnOffLevel: '@',\r\n                turnOnLevel: '@',\r\n                blinkingInterval: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    LedLightDirective.$inject = ['$interval', 'svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('ledLight', LedLightDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function SevenSegmentDisplayDirective(svgUtils, templates) {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                background = (scope.showBackground === \"true\"),\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                d3element = d3.select(element[0]),\r\n                iterator;\r\n            d3element.prependAttr(svgUtils.transformAttr, svgUtils.translateString(x, y));\r\n            scope.background = '8';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                scope.background += '.8';\r\n            }\r\n            if (background) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function() {\r\n                var width = d3element.select('text#background').node().getBBox().width;\r\n                d3element.select('text#value').attr(svgUtils.transformAttr, svgUtils.translateString(width, 0));\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '@',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    SevenSegmentDisplayDirective.$inject = ['svgUtils', 'templates'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('sevenSegmentDisplay', SevenSegmentDisplayDirective);\r\n} (window.d3));"],"sourceRoot":"/source/"}