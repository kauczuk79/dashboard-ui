{"version":3,"sources":["dasboard-ui.min.js"],"names":["angular","module","SvgUtilsFactory","transformAttr","transformOriginAttr","opacityStyle","translateString","x","y","scaleString","scale","rotateString","angle","transformOriginString","indicatorOriginX","indicatorOriginY","appendTransform","newTransform","oldTransform","oldT","undefined","prependTransform","factory","TemplatesFactory","segmentDisplayTemplate","d3","AlphanumericLcdDirective","svgUtils","link","scope","element","attrs","updateLines","lineNumber","rows","lines","select","selectAll","FOREGROUND_CLASS","data","text","substring","columns","lineIterator","yPosition","RECTANGLE_CHAR","BACKGROUND_CLASS","parseInt","parseFloat","showBackground","lcdGroup","fontHeight","attr","append","classed","arr","length","join","$watch","restrict","$inject","directive","window","AnalogGaugeDirective","updateGaugeAngle","value","minValue","startAngle","maxValue","endAngle","angleDifference","Math","abs","deltaAngle","deltaValue","clockwise","indicator","style","gaugeGroup","indicatorBoundingBox","node","getBBox","width","height","BarMeterDirective","updateValue","currentX","currentY","barLength","stepWidth","originalBarY","originalBarX","maxPosition","minPosition","vertical","bar","transition","duration","EASING_DURATION","ease","EASING","meter","barWidth","DotMeterDirective","changeValue","dotsCollection","forEach","domElement","opacity","selection","FourteenSegmentDisplayDirective","templates","iterator","digits","background","d3element","ready","template","LedLightDirective","$interval","setOpacity","icon","isVisible","turnOnLevel","turnOn","cancel","blinkingTimer","turnOff","turnOffLevel","blinkingMode","blinkingInterval","isNaN","mode","toLowerCase","SevenSegmentDisplayDirective"],"mappings":"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","file":"dasboard-ui.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui', ['ngRoute', 'dashboard-ui.directives']);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons', []);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction SvgUtilsFactory() {\r\n\t\treturn {\r\n\t\t\ttransformAttr: 'transform',\r\n\t\t\ttransformOriginAttr: 'transform-origin',\r\n\t\t\topacityStyle: 'opacity',\r\n\t\t\ttranslateString: function (x, y) {\r\n                return 'translate(' + x + ', ' + y + ')';\r\n            },\r\n            scaleString: function (scale) {\r\n                return 'scale(' + scale + ')';\r\n            },\r\n\t\t\trotateString: function (angle) {\r\n\t\t\t\treturn 'rotate(' + angle + 'deg)';\r\n\t\t\t},\r\n\t\t\ttransformOriginString: function (indicatorOriginX, indicatorOriginY) {\r\n\t\t\t\treturn indicatorOriginX + 'px ' + indicatorOriginY + 'px';\r\n\t\t\t},\r\n\t\t\tappendTransform: function (newTransform, oldTransform) {\r\n\t\t\t\tvar oldT = (oldTransform === undefined || oldTransform === null)? '' : oldTransform;\r\n\t\t\t\treturn oldT + newTransform;\r\n\t\t\t},\r\n\t\t\tprependTransform: function (newTransform, oldTransform) {\r\n\t\t\t\tvar oldT = (oldTransform === undefined || oldTransform === null)? '' : oldTransform;\r\n\t\t\t\treturn newTransform + oldT;\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons')\r\n\t\t.factory('svgUtils', SvgUtilsFactory);\r\n} ());\n(function () {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction TemplatesFactory() {\r\n\t\treturn {\r\n\t\t\tsegmentDisplayTemplate: '<text id=\"background\" text-anchor=\"end\" dominant-baseline=\"text-before-edge\" fill=\"black\" opacity=\"{{opacity}}\">{{background}}</text><text id=\"value\" dominant-baseline=\"text-before-edge\" writing-mode=\"lr\">{{value}}</text>'\r\n\t\t};\r\n\t}\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.commons')\r\n\t\t.factory('templates', TemplatesFactory);\r\n} ());\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui.directives', ['dashboard-ui.commons']);\r\n} ());\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AlphanumericLcdDirective(svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var RECTANGLE_CHAR = '\\u0B8F',\r\n                FOREGROUND_CLASS = 'foreground',\r\n                BACKGROUND_CLASS = 'background',\r\n                rows = parseInt(scope.rows, 10) || 2,\r\n                columns = parseInt(scope.columns, 10) || 16,\r\n                scale = parseFloat(scope.scale, 10) || 1.0,\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                showBackground = (scope.showBackground === 'true'),\r\n                lcdGroup = d3.select(element[0]),\r\n                lineIterator,\r\n                fontHeight = 18,\r\n                yPosition;\r\n            function updateLines() {\r\n                var lineNumber;\r\n                for (lineNumber = 0; lineNumber < rows; lineNumber += 1) {\r\n                    if (scope.lines[lineNumber] !== undefined) {\r\n                        d3.select(element[0]).selectAll('.'+FOREGROUND_CLASS).data(scope.lines).text(function (data) {\r\n                            return data.substring(0, columns);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            lcdGroup.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), lcdGroup.attr(svgUtils.transformAttr)));\r\n            for (lineIterator = 0; lineIterator < rows; lineIterator += 1) {\r\n                yPosition = fontHeight * (lineIterator + 1);\r\n                lcdGroup.append('text').classed(FOREGROUND_CLASS, true).attr('y', yPosition).attr(svgUtils.transformAttr, svgUtils.scaleString(scale));\r\n                if (showBackground) {\r\n                    lcdGroup.append('text').classed(BACKGROUND_CLASS, true).attr('y', yPosition).attr(svgUtils.transformAttr, svgUtils.scaleString(scale)).data(RECTANGLE_CHAR).text(function (data) {\r\n                        var arr = [];\r\n                        arr.length = columns + 1;\r\n                        return arr.join(data);\r\n                    });\r\n                }\r\n            }\r\n            scope.$watch('lines', updateLines);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                rows: '@',\r\n                columns: '@',\r\n                scale: '@',\r\n                showBackground: '@',\r\n                lines: '=',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    AlphanumericLcdDirective.$inject = ['svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('alphanumericLcd', AlphanumericLcdDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AnalogGaugeDirective(svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var startAngle = parseInt(scope.startAngle, 10),\r\n                maxValue = parseInt(scope.maxValue, 10),\r\n                endAngle = parseInt(scope.endAngle, 10) || (startAngle * -1),\r\n                minValue = parseInt(scope.minValue, 10) || 0,\r\n                x = parseFloat(scope.x) || 0.0,\r\n                y = parseFloat(scope.y) || 0.0,\r\n                gaugeGroup = d3.select(element[0]),\r\n                indicator = gaugeGroup.select('#indicator'),\r\n                indicatorBoundingBox = indicator.node().getBBox(),\r\n                indicatorOriginX = scope.indicatorOriginX || (indicatorBoundingBox.x + (indicatorBoundingBox.width / 2)),\r\n                indicatorOriginY = scope.indicatorOriginY || (indicatorBoundingBox.y + (indicatorBoundingBox.height / 2)),\r\n                angle,\r\n                deltaAngle = endAngle - startAngle,\r\n                deltaValue = maxValue - minValue;\r\n\r\n            function updateGaugeAngle() {\r\n                var value = parseInt(scope.value, 10);\r\n                if (value < minValue) {\r\n                    angle = startAngle;\r\n                } else if (value > maxValue) {\r\n                    angle = endAngle;\r\n                } else {\r\n                    var angleDifference = Math.abs((deltaAngle / deltaValue) * (minValue - value)),\r\n                        clockwise = startAngle < endAngle;\r\n                    if (clockwise) {\r\n                        angle = startAngle + angleDifference;\r\n                    } else {\r\n                        angle = startAngle - angleDifference;\r\n                    }\r\n                }\r\n                indicator.style(svgUtils.transformAttr, svgUtils.rotateString(angle));\r\n            }\r\n            gaugeGroup.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), gaugeGroup.attr(svgUtils.transformAttr)));\r\n            indicator.style(svgUtils.transformOriginAttr, svgUtils.transformOriginString(indicatorOriginX, indicatorOriginY));\r\n            scope.$watch('value', updateGaugeAngle);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                value: '@',\r\n                startAngle: '@',\r\n                endAngle: '@',\r\n                maxValue: '@',\r\n                minValue: '@',\r\n                indicatorOriginX: '@',\r\n                indicatorOriginY: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    AnalogGaugeDirective.$inject = ['svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('analogGauge', AnalogGaugeDirective);\r\n} (window.d3));\n(function (d3) {\r\n\t'use strict';\r\n\t/*global angular, console*/\r\n\r\n\tfunction BarMeterDirective(svgUtils) {\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t\tvar EASING_DURATION = 250,\r\n\t\t\t\tEASING = 'linear',\r\n\t\t\t\tx = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n\t\t\t\tmaxValue = parseInt(scope.maxValue, 10),\r\n\t\t\t\tminValue = parseInt(scope.minValue, 10) || 0,\r\n\t\t\t\tminPosition = parseInt(scope.minPosition, 10) || 0,\r\n\t\t\t\tmeter = d3.select(element[0]),\r\n\t\t\t\tbar = meter.select('#bar'),\r\n\t\t\t\tbarWidth = parseInt(bar.attr('width')) || 0,\r\n\t\t\t\tmaxPosition = parseInt(scope.maxPosition, 10) || barWidth,\r\n\t\t\t\tvertical = (scope.vertical === 'true'),\r\n\t\t\t\toriginalBarX = parseInt(bar.attr('x'), 10) || 0,\r\n\t\t\t\toriginalBarY = parseInt(bar.attr('y'), 10) || 0,\r\n\t\t\t\tstepWidth = ((maxPosition - minPosition) / (maxValue - minValue));\r\n\t\t\tfunction updateValue() {\r\n\t\t\t\tvar value = parseInt(scope.value, 10) || 0,\r\n\t\t\t\t\tbarLength = Math.abs(stepWidth * value),\r\n\t\t\t\t\tcurrentX,\r\n                    currentY,\r\n                    height,\r\n                    width;\r\n\t\t\t\tif (value >= 0 && value <= maxValue) {\r\n\t\t\t\t\tcurrentY = originalBarY - barLength;\r\n\t\t\t\t\theight = barLength;\r\n\t\t\t\t\tcurrentX = originalBarX;\r\n\t\t\t\t\twidth = barLength;\r\n\t\t\t\t} else if (value < 0 && value >= minValue) {\r\n\t\t\t\t\tcurrentY = originalBarY;\r\n\t\t\t\t\theight = barLength;\r\n\t\t\t\t\tcurrentX = originalBarX - barLength;\r\n\t\t\t\t\twidth = barLength;\r\n\t\t\t\t} else if (value > maxValue) {\r\n\t\t\t\t\tcurrentY = maxPosition;\r\n\t\t\t\t\theight = stepWidth * maxValue;\r\n\t\t\t\t\tcurrentX = originalBarX;\r\n\t\t\t\t\twidth = stepWidth * maxValue;\r\n\t\t\t\t} else if (value < minValue) {\r\n\t\t\t\t\tcurrentY = originalBarY;\r\n\t\t\t\t\theight = stepWidth * minValue;\r\n\t\t\t\t\tcurrentX = minPosition;\r\n\t\t\t\t\twidth = stepWidth * minValue;\r\n\t\t\t\t}\r\n\t\t\t\tif (vertical) {\r\n\t\t\t\t\tbar.transition().duration(EASING_DURATION).ease(EASING).attr('y', currentY).attr('height', Math.abs(height));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbar.transition().duration(EASING_DURATION).ease(EASING).attr('x', currentX).attr('width', Math.abs(width));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tmeter.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), meter.attr(svgUtils.transformAttr)));\r\n\t\t\tscope.$watch('value', updateValue);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tlink: link,\r\n\t\t\trestrict: 'C',\r\n\t\t\tscope: {\r\n\t\t\t\tminValue: '@',\r\n\t\t\t\tmaxValue: '@',\r\n\t\t\t\tminPosition: '@',\r\n\t\t\t\tmaxPosition: '@',\r\n\t\t\t\tvalue: '@',\r\n\t\t\t\tvertical: '@',\r\n\t\t\t\tx: '@',\r\n\t\t\t\ty: '@'\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tBarMeterDirective.$inject = ['svgUtils'];\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.directives')\r\n\t\t.directive('barMeter', BarMeterDirective);\r\n} (window.d3));\n(function (d3) {\r\n\t'use strict';\r\n\t/*global angular*/\r\n\r\n\tfunction DotMeterDirective(svgUtils) {\r\n\t\tfunction link(scope, element, attrs) {\r\n\t\t\tvar minValue = parseInt(scope.minValue, 10) || 0,\r\n\t\t\t\tmaxValue = parseInt(scope.maxValue, 10),\r\n\t\t\t\tx = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n\t\t\t\tdotsCollection = d3.select(element[0]);\r\n\t\t\tfunction changeValue() {\r\n\t\t\t\tvar value = parseInt(scope.value, 10) || 0;\r\n\t\t\t\tif (value > maxValue) {\r\n\t\t\t\t\tvalue = maxValue;\r\n\t\t\t\t} else if (value < minValue) {\r\n\t\t\t\t\tvalue = minValue;\r\n\t\t\t\t}\r\n\t\t\t\tdotsCollection.selectAll('[id^=dot]')[0].forEach(function(domElement) {\r\n\t\t\t\t\tvar opacity = 1.0,\r\n\t\t\t\t\t\tselection = d3.select(domElement);\r\n\t\t\t\t\tif(parseInt(selection.attr('data-value'), 10) > value) {\r\n\t\t\t\t\t\topacity = 0.0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tselection.style(svgUtils.opacityStyle, opacity);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tdotsCollection.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), dotsCollection.attr(svgUtils.transformAttr)));\r\n\t\t\tscope.$watch('value', changeValue);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tlink: link,\r\n\t\t\trestrict: 'C',\r\n\t\t\tscope: {\r\n\t\t\t\tminValue: '@',\r\n\t\t\t\tmaxValue: '@',\r\n\t\t\t\tvalue: '@',\r\n\t\t\t\tx: '@',\r\n\t\t\t\ty: '@'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tDotMeterDirective.$inject = ['svgUtils'];\r\n\r\n\tangular\r\n\t\t.module('dashboard-ui.directives')\r\n\t\t.directive('dotMeter', DotMeterDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function FourteenSegmentDisplayDirective(svgUtils, templates) {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                background = (scope.showBackground === \"true\"),\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                d3element = d3.select(element[0]),\r\n                iterator;\r\n            d3element.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), d3element.attr(svgUtils.transformAttr)));\r\n            scope.background = '~';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                scope.background += '.~';\r\n            }\r\n            if (background) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function() {\r\n                var width = d3element.select('text#background').node().getBBox().width;\r\n                d3element.select('text#value').attr(svgUtils.transformAttr, svgUtils.translateString(width, 0));\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '@',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    FourteenSegmentDisplayDirective.$inject = ['svgUtils', 'templates'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('fourteenSegmentDisplay', FourteenSegmentDisplayDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    function LedLightDirective($interval, svgUtils) {\r\n        function link(scope, element, attrs) {\r\n            var x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                icon = d3.select(element[0]),\r\n                blinkingInterval = parseInt(scope.blinkingInterval),\r\n                turnOnLevel = parseFloat(scope.turnOnLevel) || 1.0,\r\n                turnOffLevel = parseFloat(scope.turnOffLevel) || 0.0,\r\n                blinkingTimer;\r\n            function setOpacity(opacity) {\r\n                icon.style(svgUtils.opacityStyle, opacity);\r\n            }\r\n            function isVisible() {\r\n                return parseFloat(icon.style(svgUtils.opacityStyle)) === turnOnLevel;\r\n            }\r\n            function turnOn() {\r\n                $interval.cancel(blinkingTimer);\r\n                setOpacity(turnOnLevel);\r\n            }\r\n            function turnOff() {\r\n                $interval.cancel(blinkingTimer);\r\n                setOpacity(turnOffLevel);\r\n            }\r\n            function blinkingMode() {\r\n                blinkingTimer = $interval(function () {\r\n                    if (isVisible()) {\r\n                        setOpacity(turnOffLevel);\r\n                    } else {\r\n                        setOpacity(turnOnLevel);\r\n                    }\r\n                }, 500);\r\n            }\r\n            icon.attr(svgUtils.transformAttr, svgUtils.prependTransform(svgUtils.translateString(x, y), icon.attr(svgUtils.transformAttr)));\r\n            if (!isNaN(blinkingInterval)) {\r\n                icon.style('transition', 'all ' + (blinkingInterval / 1000) + 's linear 0s');\r\n            }\r\n            scope.$watch('mode', function () {\r\n                if (scope.mode.toLowerCase() === 'on') {\r\n                    turnOn();\r\n                } else if (scope.mode.toLowerCase() === 'blinking') {\r\n                    blinkingMode();\r\n                } else {\r\n                    turnOff();\r\n                }\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            scope: {\r\n                mode: '@',\r\n                turnOffLevel: '@',\r\n                turnOnLevel: '@',\r\n                blinkingInterval: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    LedLightDirective.$inject = ['$interval', 'svgUtils'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('ledLight', LedLightDirective);\r\n} (window.d3));\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function SevenSegmentDisplayDirective(svgUtils, templates) {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                background = (scope.showBackground === \"true\"),\r\n                x = parseFloat(scope.x) || 0,\r\n                y = parseFloat(scope.y) || 0,\r\n                d3element = d3.select(element[0]).attr(svgUtils.transformAttr, svgUtils.translateString(x, y)),\r\n                iterator;\r\n            scope.background = '8';\r\n            scope.opacity = 0.0;\r\n            for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                scope.background += '.8';\r\n            }\r\n            if (background) {\r\n                scope.opacity = 0.1;\r\n            }\r\n            element.ready(function() {\r\n                var width = d3element.select('text#background').node().getBBox().width;\r\n                d3element.select('text#value').attr(svgUtils.transformAttr, svgUtils.translateString(width, 0));\r\n            });\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'C',\r\n            template: templates.segmentDisplayTemplate,\r\n            scope: {\r\n                digits: '@',\r\n                value: '@',\r\n                showBackground: '@',\r\n                x: '@',\r\n                y: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    SevenSegmentDisplayDirective.$inject = ['svgUtils', 'templates'];\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('sevenSegmentDisplay', SevenSegmentDisplayDirective);\r\n} (window.d3));"],"sourceRoot":"/source/"}