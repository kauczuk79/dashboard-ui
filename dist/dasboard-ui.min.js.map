{"version":3,"sources":["dasboard-ui.min.js"],"names":["angular","module","d3","AnalogGaugeDirective","link","scope","element","attrs","updateGaugeAngle","value","parseInt","minValue","angle","startAngle","maxValue","endAngle","deltaAngle","deltaValue","indicator","style","indicatorOriginX","indicatorOriginY","selectAll","select","indicatorDimensions","node","getBBox","x","width","y","height","$watch","restrict","directive","window","FourteenSegmentDisplayDirective","iterator","digits","background","showBackground","template","SevenSegmentDisplayDirective"],"mappings":"CAAC,WACG,YAGAA,SAAQC,OAAO,gBAAiB,UAAW,+BAE9C,WACG,YAGAD,SAAQC,OAAO,iCAElB,SAASC,GACN,YAGA,SAASC,KACL,QAASC,GAAKC,EAAOC,EAASC,GAa1B,QAASC,KACL,GAAIC,GAAQC,SAASL,EAAMI,MAAO,GACtBE,GAARF,EACAG,EAAQC,EACDJ,EAAQK,EACfF,EAAQG,GAESA,EAAbF,EAEAG,EAAcD,EAAWF,EAClBA,EAAaE,IAEpBC,EAAcH,EAAaE,GAE/BH,EAAQC,EAAeG,EAAaC,EAAcR,EAClDS,EAAUC,MAAM,mBAAoBC,EAAmB,MAAQC,EAAmB,MAClFH,EAAUC,MAAM,YAAa,UAAYP,EAAQ,SA5BzD,GAQIA,GARAC,EAAaH,SAASL,EAAMQ,WAAY,IACxCC,EAAWJ,SAASL,EAAMS,SAAU,IACpCC,EAAWL,SAASL,EAAMU,SAAU,KAAqB,GAAbF,EAC5CF,EAAWD,SAASL,EAAMM,SAAU,KAAO,EAC3CO,EAAYhB,EAAGoB,UAAU,gBAAgBC,OAAO,cAChDC,EAAsBN,EAAUO,OAAOC,UACvCN,EAAmBf,EAAMe,kBAAqBI,EAAoBG,EAAKH,EAAoBI,MAAQ,EACnGP,EAAmBhB,EAAMgB,kBAAqBG,EAAoBK,EAAKL,EAAoBM,OAAS,EAEpGd,EAAa,EACbC,EAAaH,EAAWH,CAsB5BN,GAAM0B,OAAO,QAAS,WAClBvB,MACD,GAGP,OACIJ,KAAMA,EACN4B,SAAU,IACV3B,OACII,MAAO,IACPI,WAAY,IACZC,SAAU,IACVM,iBAAkB,IAClBC,iBAAkB,MAK9BrB,QACKC,OAAO,2BACPgC,UAAU,cAAe9B,IAChC+B,OAAOhC,IACR,WACG,YAGA,SAASiC,KACL,QAAS/B,GAAKC,EAAOC,EAASC,GAC1B,GAGI6B,GAHAC,EAAShC,EAAMgC,OAEfC,GADQjC,EAAMI,MACyB,SAAzBF,EAAMgC,eAGxB,IADAlC,EAAMiC,WAAa,GACfA,EAEA,IADAjC,EAAMiC,WAAa,IACdF,EAAW,EAAcC,EAAS,EAApBD,EAAuBA,GAAY,EAClD/B,EAAMiC,YAAc,KAKhC,OACIlC,KAAMA,EACN4B,SAAU,IACVQ,SAAU,0FACVnC,OACIgC,OAAQ,IACR5B,MAAO,MAKnBT,QACKC,OAAO,2BACPgC,UAAU,yBAA0BE,MAE5C,WACG,YAGA,SAASM,KACL,QAASrC,GAAKC,EAAOC,EAASC,GAC1B,GAGI6B,GAHAC,EAAShC,EAAMgC,OAEfC,GADQjC,EAAMI,MACyB,SAAzBF,EAAMgC,eAGxB,IADAlC,EAAMiC,WAAa,GACfA,EAEA,IADAjC,EAAMiC,WAAa,IACdF,EAAW,EAAcC,EAAS,EAApBD,EAAuBA,GAAY,EAClD/B,EAAMiC,YAAc,KAKhC,OACIlC,KAAMA,EACN4B,SAAU,IACVQ,SAAU,0FACVnC,OACIgC,OAAQ,IACR5B,MAAO,MAKnBT,QACKC,OAAO,2BACPgC,UAAU,sBAAuBQ","file":"dasboard-ui.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui', ['ngRoute', 'dashboard-ui.directives']);\r\n}());\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui.directives', []);\r\n}());\n(function(d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AnalogGaugeDirective() {\r\n        function link(scope, element, attrs) {\r\n            var startAngle = parseInt(scope.startAngle, 10),\r\n                maxValue = parseInt(scope.maxValue, 10),\r\n                endAngle = parseInt(scope.endAngle, 10) || (startAngle * -1),\r\n                minValue = parseInt(scope.minValue, 10) || 0,\r\n                indicator = d3.selectAll('analog-gauge').select('#indicator'),\r\n                indicatorDimensions = indicator.node().getBBox(),\r\n                indicatorOriginX = scope.indicatorOriginX || (indicatorDimensions.x + (indicatorDimensions.width / 2)),\r\n                indicatorOriginY = scope.indicatorOriginY || (indicatorDimensions.y + (indicatorDimensions.height / 2)),\r\n                angle,\r\n                deltaAngle = 0,\r\n                deltaValue = maxValue - minValue;\r\n\r\n            function updateGaugeAngle() {\r\n                var value = parseInt(scope.value, 10);\r\n                if (value < minValue) {\r\n                    angle = startAngle;\r\n                } else if (value > maxValue) {\r\n                    angle = endAngle;\r\n                } else {\r\n                    if (startAngle < endAngle) {\r\n                        //clockwise\r\n                        deltaAngle = (endAngle - startAngle);\r\n                    } else if (startAngle > endAngle) {\r\n                        //counter clockwise\r\n                        deltaAngle = (startAngle - endAngle);\r\n                    }\r\n                    angle = startAngle + ((deltaAngle / deltaValue) * value);\r\n                    indicator.style('transform-origin', indicatorOriginX + 'px ' + indicatorOriginY + 'px');\r\n                    indicator.style('transform', 'rotate(' + angle + 'deg)');\r\n                }\r\n            }\r\n\r\n            scope.$watch('value', function() {\r\n                updateGaugeAngle();\r\n            }, true);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            scope: {\r\n                value: '@',\r\n                startAngle: '@',\r\n                maxValue: '@',\r\n                indicatorOriginX: '@',\r\n                indicatorOriginY: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('analogGauge', AnalogGaugeDirective);\r\n}(window.d3));\n(function () {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function FourteenSegmentDisplayDirective() {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                value = scope.value,\r\n                background = (attrs.showBackground === \"true\"),\r\n                iterator;\r\n            scope.background = '';\r\n            if (background) {\r\n                scope.background = '~';\r\n                for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                    scope.background += '.~';\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            template: '<span class=\"background\">{{background}}</span><span class=\"foreground\">{{value}}</span>',\r\n            scope: {\r\n                digits: '@',\r\n                value: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('fourteenSegmentDisplay', FourteenSegmentDisplayDirective);\r\n}());\n(function () {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function SevenSegmentDisplayDirective() {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                value = scope.value,\r\n                background = (attrs.showBackground === \"true\"),\r\n                iterator;\r\n            scope.background = '';\r\n            if (background) {\r\n                scope.background = '8';\r\n                for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                    scope.background += '.8';\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            template: '<span class=\"background\">{{background}}</span><span class=\"foreground\">{{value}}</span>',\r\n            scope: {\r\n                digits: '@',\r\n                value: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('sevenSegmentDisplay', SevenSegmentDisplayDirective);\r\n}());"],"sourceRoot":"/source/"}