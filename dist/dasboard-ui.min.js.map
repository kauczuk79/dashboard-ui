{"version":3,"sources":["dasboard-ui.min.js"],"names":["angular","module","FourteenSegmentDisplayDirective","link","scope","element","attrs","iterator","digits","background","value","showBackground","restrict","template","directive","d3","AnalogGaugeDirective","updateGaugeAngle","parseInt","minValue","angle","startAngle","maxValue","endAngle","deltaAngle","deltaValue","indicator","style","indicatorOriginX","indicatorOriginY","select","indicatorBoundingBox","node","getBBox","x","width","y","height","$watch","window","SevenSegmentDisplayDirective"],"mappings":"CAAC,WACG,YAGAA,SAAQC,OAAO,gBAAiB,UAAW,+BAE9C,WACG,YAGAD,SAAQC,OAAO,iCAElB,WACG,YAGA,SAASC,KACL,QAASC,GAAKC,EAAOC,EAASC,GAC1B,GAGIC,GAHAC,EAASJ,EAAMI,OAEfC,GADQL,EAAMM,MACyB,SAAzBJ,EAAMK,eAGxB,IADAP,EAAMK,WAAa,GACfA,EAEA,IADAL,EAAMK,WAAa,IACdF,EAAW,EAAcC,EAAS,EAApBD,EAAuBA,GAAY,EAClDH,EAAMK,YAAc,KAKhC,OACIN,KAAMA,EACNS,SAAU,IACVC,SAAU,0FACVT,OACII,OAAQ,IACRE,MAAO,MAKnBV,QACKC,OAAO,2BACPa,UAAU,yBAA0BZ,MAE5C,SAAUa,GACP,YAGA,SAASC,KACL,QAASb,GAAKC,EAAOC,EAASC,GAa1B,QAASW,KACL,GAAIP,GAAQQ,SAASd,EAAMM,MAAO,GACtBS,GAART,EACAU,EAAQC,EACDX,EAAQY,EACfF,EAAQG,GAESA,EAAbF,EAEAG,EAAcD,EAAWF,EAClBA,EAAaE,IAEpBC,EAAcH,EAAaE,GAE/BH,EAAQC,EAAeG,EAAaC,EAAcf,EAClDgB,EAAUC,MAAM,mBAAoBC,EAAmB,MAAQC,EAAmB,MAClFH,EAAUC,MAAM,YAAa,UAAYP,EAAQ,SA5BzD,GAQIA,GARAC,EAAaH,SAASd,EAAMiB,WAAY,IACxCC,EAAWJ,SAASd,EAAMkB,SAAU,IACpCC,EAAWL,SAASd,EAAMmB,SAAU,KAAqB,GAAbF,EAC5CF,EAAWD,SAASd,EAAMe,SAAU,KAAO,EAC3CO,EAAYX,EAAGe,OAAOzB,EAAQ,IAAIyB,OAAO,cACzCC,EAAuBL,EAAUM,OAAOC,UACxCL,EAAmBxB,EAAMwB,kBAAqBG,EAAqBG,EAAKH,EAAqBI,MAAQ,EACrGN,EAAmBzB,EAAMyB,kBAAqBE,EAAqBK,EAAKL,EAAqBM,OAAS,EAEtGb,EAAa,EACbC,EAAaH,EAAWH,CAsB5Bf,GAAMkC,OAAO,QAAS,WAClBrB,MACD,GAGP,OACId,KAAMA,EACNS,SAAU,IACVR,OACIM,MAAO,IACPW,WAAY,IACZC,SAAU,IACVM,iBAAkB,IAClBC,iBAAkB,MAK9B7B,QACKC,OAAO,2BACPa,UAAU,cAAeE,IAChCuB,OAAOxB,IACR,WACG,YAGA,SAASyB,KACL,QAASrC,GAAKC,EAAOC,EAASC,GAC1B,GAGIC,GAHAC,EAASJ,EAAMI,OAEfC,GADQL,EAAMM,MACyB,SAAzBJ,EAAMK,eAGxB,IADAP,EAAMK,WAAa,GACfA,EAEA,IADAL,EAAMK,WAAa,IACdF,EAAW,EAAcC,EAAS,EAApBD,EAAuBA,GAAY,EAClDH,EAAMK,YAAc,KAKhC,OACIN,KAAMA,EACNS,SAAU,IACVC,SAAU,0FACVT,OACII,OAAQ,IACRE,MAAO,MAKnBV,QACKC,OAAO,2BACPa,UAAU,sBAAuB0B","file":"dasboard-ui.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui', ['ngRoute', 'dashboard-ui.directives']);\r\n}());\n(function () {\r\n    'use strict';\r\n    /*global angular*/\r\n\r\n    angular.module('dashboard-ui.directives', []);\r\n}());\n(function () {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function FourteenSegmentDisplayDirective() {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                value = scope.value,\r\n                background = (attrs.showBackground === \"true\"),\r\n                iterator;\r\n            scope.background = '';\r\n            if (background) {\r\n                scope.background = '~';\r\n                for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                    scope.background += '.~';\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            template: '<span class=\"background\">{{background}}</span><span class=\"foreground\">{{value}}</span>',\r\n            scope: {\r\n                digits: '@',\r\n                value: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('fourteenSegmentDisplay', FourteenSegmentDisplayDirective);\r\n}());\n(function (d3) {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function AnalogGaugeDirective() {\r\n        function link(scope, element, attrs) {\r\n            var startAngle = parseInt(scope.startAngle, 10),\r\n                maxValue = parseInt(scope.maxValue, 10),\r\n                endAngle = parseInt(scope.endAngle, 10) || (startAngle * -1),\r\n                minValue = parseInt(scope.minValue, 10) || 0,\r\n                indicator = d3.select(element[0]).select('#indicator'),\r\n                indicatorBoundingBox = indicator.node().getBBox(),\r\n                indicatorOriginX = scope.indicatorOriginX || (indicatorBoundingBox.x + (indicatorBoundingBox.width / 2)),\r\n                indicatorOriginY = scope.indicatorOriginY || (indicatorBoundingBox.y + (indicatorBoundingBox.height / 2)),\r\n                angle,\r\n                deltaAngle = 0,\r\n                deltaValue = maxValue - minValue;\r\n\r\n            function updateGaugeAngle() {\r\n                var value = parseInt(scope.value, 10);\r\n                if (value < minValue) {\r\n                    angle = startAngle;\r\n                } else if (value > maxValue) {\r\n                    angle = endAngle;\r\n                } else {\r\n                    if (startAngle < endAngle) {\r\n                        //clockwise\r\n                        deltaAngle = (endAngle - startAngle);\r\n                    } else if (startAngle > endAngle) {\r\n                        //counter clockwise\r\n                        deltaAngle = (startAngle - endAngle);\r\n                    }\r\n                    angle = startAngle + ((deltaAngle / deltaValue) * value);\r\n                    indicator.style('transform-origin', indicatorOriginX + 'px ' + indicatorOriginY + 'px');\r\n                    indicator.style('transform', 'rotate(' + angle + 'deg)');\r\n                }\r\n            }\r\n\r\n            scope.$watch('value', function () {\r\n                updateGaugeAngle();\r\n            }, true);\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            scope: {\r\n                value: '@',\r\n                startAngle: '@',\r\n                maxValue: '@',\r\n                indicatorOriginX: '@',\r\n                indicatorOriginY: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('analogGauge', AnalogGaugeDirective);\r\n}(window.d3));\n(function () {\r\n    'use strict';\r\n    /*global angular, console*/\r\n\r\n    function SevenSegmentDisplayDirective() {\r\n        function link(scope, element, attrs) {\r\n            var digits = scope.digits,\r\n                value = scope.value,\r\n                background = (attrs.showBackground === \"true\"),\r\n                iterator;\r\n            scope.background = '';\r\n            if (background) {\r\n                scope.background = '8';\r\n                for (iterator = 0; iterator < digits - 1; iterator += 1) {\r\n                    scope.background += '.8';\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'E',\r\n            template: '<span class=\"background\">{{background}}</span><span class=\"foreground\">{{value}}</span>',\r\n            scope: {\r\n                digits: '@',\r\n                value: '@'\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('dashboard-ui.directives')\r\n        .directive('sevenSegmentDisplay', SevenSegmentDisplayDirective);\r\n}());"],"sourceRoot":"/source/"}